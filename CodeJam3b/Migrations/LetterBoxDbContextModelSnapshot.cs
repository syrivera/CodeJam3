// <auto-generated />
using CodeJam3b.Models.Movies;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CodeJam3b.Migrations
{
    [DbContext(typeof(LetterBoxDbContext))]
    partial class LetterBoxDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CodeJam3b.Models.Lists.Diary", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("DiaryId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("diary_id");

                    b.Property<string>("MovieId")
                        .HasColumnType("text")
                        .HasColumnName("movie_id");

                    b.Property<string>("RatingId")
                        .HasColumnType("text")
                        .HasColumnName("rating_id");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("RatingId");

                    b.ToTable("diary");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            DiaryId = "diary-001",
                            MovieId = "movie-001",
                            RatingId = "rating-001"
                        },
                        new
                        {
                            Id = "2",
                            DiaryId = "diary-001",
                            MovieId = "movie-003",
                            RatingId = "rating-002"
                        },
                        new
                        {
                            Id = "3",
                            DiaryId = "diary-001",
                            MovieId = "movie-005",
                            RatingId = "rating-003"
                        },
                        new
                        {
                            Id = "4",
                            DiaryId = "diary-002",
                            MovieId = "movie-002",
                            RatingId = "rating-004"
                        },
                        new
                        {
                            Id = "5",
                            DiaryId = "diary-002",
                            MovieId = "movie-004",
                            RatingId = "rating-005"
                        },
                        new
                        {
                            Id = "6",
                            DiaryId = "diary-002",
                            MovieId = "movie-007",
                            RatingId = "rating-006"
                        },
                        new
                        {
                            Id = "7",
                            DiaryId = "diary-003",
                            MovieId = "movie-006",
                            RatingId = "rating-007"
                        },
                        new
                        {
                            Id = "8",
                            DiaryId = "diary-003",
                            MovieId = "movie-008",
                            RatingId = "rating-008"
                        },
                        new
                        {
                            Id = "9",
                            DiaryId = "diary-003",
                            MovieId = "movie-001",
                            RatingId = "rating-009"
                        });
                });

            modelBuilder.Entity("CodeJam3b.Models.Lists.Fav", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("FavId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fav_id");

                    b.Property<string>("MovieId")
                        .HasColumnType("text")
                        .HasColumnName("movie_id");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("fav");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            FavId = "fav-001",
                            MovieId = "movie-001"
                        },
                        new
                        {
                            Id = "2",
                            FavId = "fav-001",
                            MovieId = "movie-003"
                        },
                        new
                        {
                            Id = "3",
                            FavId = "fav-002",
                            MovieId = "movie-002"
                        },
                        new
                        {
                            Id = "4",
                            FavId = "fav-002",
                            MovieId = "movie-007"
                        },
                        new
                        {
                            Id = "5",
                            FavId = "fav-003",
                            MovieId = "movie-008"
                        },
                        new
                        {
                            Id = "6",
                            FavId = "fav-003",
                            MovieId = "movie-001"
                        });
                });

            modelBuilder.Entity("CodeJam3b.Models.Lists.Watched", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("DiaryId")
                        .HasColumnType("text")
                        .HasColumnName("diary_id");

                    b.Property<string>("FavId")
                        .HasColumnType("text")
                        .HasColumnName("fav_id");

                    b.Property<string>("MovieId")
                        .HasColumnType("text")
                        .HasColumnName("movie_id");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("watched");

                    b.HasData(
                        new
                        {
                            Id = "watched-entry-001",
                            DiaryId = "diary-001",
                            FavId = "fav-001",
                            MovieId = "movie-001",
                            UserId = "user-001"
                        },
                        new
                        {
                            Id = "watched-entry-002",
                            DiaryId = "diary-001",
                            FavId = "fav-001",
                            MovieId = "movie-003",
                            UserId = "user-001"
                        },
                        new
                        {
                            Id = "watched-entry-003",
                            DiaryId = "diary-001",
                            MovieId = "movie-005",
                            UserId = "user-001"
                        },
                        new
                        {
                            Id = "watched-entry-004",
                            MovieId = "movie-002",
                            UserId = "user-001"
                        },
                        new
                        {
                            Id = "watched-entry-005",
                            DiaryId = "diary-002",
                            FavId = "fav-002",
                            MovieId = "movie-002",
                            UserId = "user-002"
                        },
                        new
                        {
                            Id = "watched-entry-006",
                            DiaryId = "diary-002",
                            MovieId = "movie-004",
                            UserId = "user-002"
                        },
                        new
                        {
                            Id = "watched-entry-007",
                            DiaryId = "diary-002",
                            FavId = "fav-002",
                            MovieId = "movie-007",
                            UserId = "user-002"
                        },
                        new
                        {
                            Id = "watched-entry-008",
                            MovieId = "movie-001",
                            UserId = "user-002"
                        },
                        new
                        {
                            Id = "watched-entry-009",
                            DiaryId = "diary-003",
                            MovieId = "movie-006",
                            UserId = "user-003"
                        },
                        new
                        {
                            Id = "watched-entry-010",
                            DiaryId = "diary-003",
                            FavId = "fav-003",
                            MovieId = "movie-008",
                            UserId = "user-003"
                        },
                        new
                        {
                            Id = "watched-entry-011",
                            DiaryId = "diary-003",
                            FavId = "fav-003",
                            MovieId = "movie-001",
                            UserId = "user-003"
                        });
                });

            modelBuilder.Entity("CodeJam3b.Models.Lists.Watchlist", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("MovieId")
                        .HasColumnType("text")
                        .HasColumnName("movie_id");

                    b.Property<string>("WatchlistId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("watchlist_id");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("watchlist");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            MovieId = "movie-004",
                            WatchlistId = "watchlist-001"
                        },
                        new
                        {
                            Id = "2",
                            MovieId = "movie-006",
                            WatchlistId = "watchlist-001"
                        },
                        new
                        {
                            Id = "3",
                            MovieId = "movie-007",
                            WatchlistId = "watchlist-001"
                        },
                        new
                        {
                            Id = "4",
                            MovieId = "movie-003",
                            WatchlistId = "watchlist-002"
                        },
                        new
                        {
                            Id = "5",
                            MovieId = "movie-005",
                            WatchlistId = "watchlist-002"
                        },
                        new
                        {
                            Id = "6",
                            MovieId = "movie-006",
                            WatchlistId = "watchlist-002"
                        },
                        new
                        {
                            Id = "7",
                            MovieId = "movie-002",
                            WatchlistId = "watchlist-003"
                        },
                        new
                        {
                            Id = "8",
                            MovieId = "movie-004",
                            WatchlistId = "watchlist-003"
                        },
                        new
                        {
                            Id = "9",
                            MovieId = "movie-007",
                            WatchlistId = "watchlist-003"
                        });
                });

            modelBuilder.Entity("CodeJam3b.Models.Movies.Movie", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<double?>("AvgRating")
                        .HasColumnType("double precision")
                        .HasColumnName("avg_rating");

                    b.Property<int?>("DurationMins")
                        .HasColumnType("integer")
                        .HasColumnName("duration_mins");

                    b.Property<string>("Genre")
                        .HasColumnType("text")
                        .HasColumnName("genre");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("RatingId")
                        .HasColumnType("text")
                        .HasColumnName("rating_id");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("integer")
                        .HasColumnName("release_year");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = "movie-001",
                            AvgRating = 4.7999999999999998,
                            DurationMins = 142,
                            Genre = "Drama",
                            Name = "The Shawshank Redemption",
                            ReleaseYear = 1994
                        },
                        new
                        {
                            Id = "movie-002",
                            AvgRating = 4.7000000000000002,
                            DurationMins = 175,
                            Genre = "Crime",
                            Name = "The Godfather",
                            ReleaseYear = 1972
                        },
                        new
                        {
                            Id = "movie-003",
                            AvgRating = 4.5,
                            DurationMins = 148,
                            Genre = "Sci-Fi",
                            Name = "Inception",
                            ReleaseYear = 2010
                        },
                        new
                        {
                            Id = "movie-004",
                            AvgRating = 4.5999999999999996,
                            DurationMins = 154,
                            Genre = "Crime",
                            Name = "Pulp Fiction",
                            ReleaseYear = 1994
                        },
                        new
                        {
                            Id = "movie-005",
                            AvgRating = 4.4000000000000004,
                            DurationMins = 136,
                            Genre = "Sci-Fi",
                            Name = "The Matrix",
                            ReleaseYear = 1999
                        },
                        new
                        {
                            Id = "movie-006",
                            AvgRating = 4.2999999999999998,
                            DurationMins = 169,
                            Genre = "Sci-Fi",
                            Name = "Interstellar",
                            ReleaseYear = 2014
                        },
                        new
                        {
                            Id = "movie-007",
                            AvgRating = 4.5,
                            DurationMins = 139,
                            Genre = "Drama",
                            Name = "Fight Club",
                            ReleaseYear = 1999
                        },
                        new
                        {
                            Id = "movie-008",
                            AvgRating = 4.5999999999999996,
                            DurationMins = 142,
                            Genre = "Drama",
                            Name = "Forrest Gump",
                            ReleaseYear = 1994
                        });
                });

            modelBuilder.Entity("CodeJam3b.Models.Movies.Rating", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("MovieName")
                        .HasColumnType("text")
                        .HasColumnName("movie_name");

                    b.Property<string>("RatingId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating_id");

                    b.Property<string>("Review")
                        .HasColumnType("text")
                        .HasColumnName("review");

                    b.Property<int?>("Stars")
                        .HasColumnType("integer")
                        .HasColumnName("stars");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ratings");

                    b.HasData(
                        new
                        {
                            Id = "rating-001",
                            MovieName = "The Shawshank Redemption",
                            RatingId = "rating-001",
                            Review = "Absolute masterpiece! Tim Robbins and Morgan Freeman deliver unforgettable performances.",
                            Stars = 5,
                            UserId = "user-001"
                        },
                        new
                        {
                            Id = "rating-002",
                            MovieName = "Inception",
                            RatingId = "rating-002",
                            Review = "Mind-bending brilliance. Nolan at his best!",
                            Stars = 5,
                            UserId = "user-001"
                        },
                        new
                        {
                            Id = "rating-003",
                            MovieName = "The Matrix",
                            RatingId = "rating-003",
                            Review = "Revolutionary sci-fi that still holds up today.",
                            Stars = 4,
                            UserId = "user-001"
                        },
                        new
                        {
                            Id = "rating-004",
                            MovieName = "The Godfather",
                            RatingId = "rating-004",
                            Review = "The pinnacle of cinema. Every scene is perfection.",
                            Stars = 5,
                            UserId = "user-002"
                        },
                        new
                        {
                            Id = "rating-005",
                            MovieName = "Pulp Fiction",
                            RatingId = "rating-005",
                            Review = "Tarantino's masterclass in non-linear storytelling.",
                            Stars = 4,
                            UserId = "user-002"
                        },
                        new
                        {
                            Id = "rating-006",
                            MovieName = "Fight Club",
                            RatingId = "rating-006",
                            Review = "Dark, twisted, and absolutely brilliant.",
                            Stars = 5,
                            UserId = "user-002"
                        },
                        new
                        {
                            Id = "rating-007",
                            MovieName = "Interstellar",
                            RatingId = "rating-007",
                            Review = "Visually stunning with an emotional core.",
                            Stars = 4,
                            UserId = "user-003"
                        },
                        new
                        {
                            Id = "rating-008",
                            MovieName = "Forrest Gump",
                            RatingId = "rating-008",
                            Review = "Heartwarming journey through American history.",
                            Stars = 5,
                            UserId = "user-003"
                        },
                        new
                        {
                            Id = "rating-009",
                            MovieName = "The Shawshank Redemption",
                            RatingId = "rating-009",
                            Review = "Hope is a good thing, maybe the best of things.",
                            Stars = 5,
                            UserId = "user-003"
                        });
                });

            modelBuilder.Entity("CodeJam3b.Models.Users.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<string>("Bio")
                        .HasColumnType("text")
                        .HasColumnName("bio");

                    b.Property<string>("DiaryId")
                        .HasColumnType("text")
                        .HasColumnName("diary_id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("ListId")
                        .HasColumnType("text")
                        .HasColumnName("list_id");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.Property<string>("WatchedId")
                        .HasColumnType("text")
                        .HasColumnName("watched_id");

                    b.Property<string>("WatchlistId")
                        .HasColumnType("text")
                        .HasColumnName("watchlist_id");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = "user-001",
                            Bio = "Love classic films and sci-fi",
                            DiaryId = "diary-001",
                            Email = "john@example.com",
                            Username = "moviebuff123",
                            WatchedId = "watched-001",
                            WatchlistId = "watchlist-001"
                        },
                        new
                        {
                            UserId = "user-002",
                            Bio = "Drama enthusiast and film critic",
                            DiaryId = "diary-002",
                            Email = "sarah@example.com",
                            Username = "cinephile",
                            WatchedId = "watched-002",
                            WatchlistId = "watchlist-002"
                        },
                        new
                        {
                            UserId = "user-003",
                            Bio = "Watching everything from classics to modern masterpieces",
                            DiaryId = "diary-003",
                            Email = "mike@example.com",
                            Username = "filmfanatic",
                            WatchedId = "watched-003",
                            WatchlistId = "watchlist-003"
                        });
                });

            modelBuilder.Entity("CodeJam3b.Models.Lists.Diary", b =>
                {
                    b.HasOne("CodeJam3b.Models.Movies.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.HasOne("CodeJam3b.Models.Movies.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId");

                    b.Navigation("Movie");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("CodeJam3b.Models.Lists.Fav", b =>
                {
                    b.HasOne("CodeJam3b.Models.Movies.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CodeJam3b.Models.Lists.Watched", b =>
                {
                    b.HasOne("CodeJam3b.Models.Movies.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CodeJam3b.Models.Lists.Watchlist", b =>
                {
                    b.HasOne("CodeJam3b.Models.Movies.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CodeJam3b.Models.Movies.Movie", b =>
                {
                    b.HasOne("CodeJam3b.Models.Movies.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("CodeJam3b.Models.Movies.Rating", b =>
                {
                    b.HasOne("CodeJam3b.Models.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
